/* 
Виды позиционирования
Fixed - позиционирует элемент строго внутри видимой части браузера (вьюпорта). 
    Расположение элемента определяется 4-мя свойствами: top, right, bottom, left. 
    Например: top: 3em; отодвинет элемент на 3em от верхней границы ВП
    В некоторых случаях через ВП можно указать размеры элемента, например 
    left: 2em; right: 2em; означает, что элемент будет на 4em меньше ВП

Absolute - работает также как и Fixed, но имеет другой containing block(КБ). 
    Элемент с данным видом позиционирования располагается относительно ближайшего позиционированного предка. Свойства top, right, bottom, left указывают как должен располагаться данный элемент внутри своего КБ.
    В случае если ни один из родительских элементов не позиционирован, элемент будет позиционироваться он initial containing block который равен размеру ВП и располагается наверху страницы

Relative - не изменяет позицию элемента само по себе. 
    Элемент не остается в потоке документа, но место которое он занимал остается, благодаря чему окрузающие его элементы также остаются на своих местах.
    Элемент может быть сдвинут с места с использованием свойств top, right, bottom, left. Управлять размером элемента с помощью свойств top, bottom или left, right нельзя. При одновременном применении этих пар свойств одно из них будет проигнарировано. Например: top и bottom - bottom игнорируется, left и right - right игнорируется

z-index - свойство работает только на позиционированных элементах. 
    При указании свойства z-index создается stacking context(СК). СК - это элемент или группа элементов, которые отрисовываются вместе браузером. Один из элементов является корнем СК, все его потомки являются частью СК.
    ПРАВИЛО: никакой элемент снаружи СК не может быть стекирован между элементами внутри СК
*/

/* 7.4.3 Understanding stacking contexts */

body {
    font-family: Helvetica, Arial, sans-serif;
    height: 200vh;
    margin: 0;
}

button {
    padding: 0.5em 0.7em;
    border: 1 solid #8d8d8d;
    background-color: white;
    font-size: 1em;
}

.top-banner {
    padding: 1em 0;
    background-color: #ffd698;
}

.top-banner-inner {
    width: 80%;
    min-width: 1000px;
    margin: 0 auto;
}

.modal {
    display: none;
}

.modal-backdrop {
    position: fixed;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1;
}

.modal-body {
    position: fixed;
    top: 3em;
    bottom: 3em;
    right: 20%;
    left: 20%;
    padding: 2em 3em;
    background-color: white;
    overflow: auto;
    z-index: 2;
}

.modal-close {
    cursor: pointer;
    position: absolute;
    top: 0.3em;
    right: 0.3em;
    padding: 0.3em;
    cursor: pointer;
    font-size: 2em;
    height: 1em;
    width: 1em;
    text-indent: 10em;
    overflow: hidden;
    border: 0;
}

.modal-close::after {
    position: absolute;
    line-height: 0.5;
    top: 0.2em;
    right: 0.1em;
    text-indent: 0;
    content: "\00D7";
}

.container {
    width: 80%;
    max-width: 1000px;
    margin: 1em auto;
}

.dropdown {
    display: inline-block;
    position: relative;
}

.dropdown-label {
    padding: 0.5em 1.5em;
    border: 1px solid #ccc;
    background-color: #eee;
}

.dropdown-label::after {
    content: "";
    position: absolute;
    right: 0.7em;
    top: 1em;
    border: 0.3em solid;
    border-color: black transparent transparent;
}

.dropdown:hover .dropdown-label::after {
    border-color: transparent transparent black;
    top: 0.7em;
}

.dropdown-menu {
    display: none;
    position: absolute;
    left: 0;
    top: 2.1em;
    min-width: 100%;
    background-color: #eeeeee;
}

.dropdown:hover .dropdown-menu {
    display: block;
}

.submenu {
    padding-left: 0;
    margin: 0;
    list-style-type: none;
    border: 1px solid #999;
}

.submenu > li > a {
    display: block;
    padding: 0.5em 1.5em;
    background-color: #eeeeee;
    color: #336699;
    text-decoration: none;
}

.submenu > li > a:hover {
    background-color: #ffffff;
}