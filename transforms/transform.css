html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  background-color: hsl(200, 80%, 30%);
  background-image: radial-gradient(
    hsl(210, 80%, 30%),
    hsl(210, 80%, 30%)
  );
  color: white;
  font-family: Raleway, Helvetica, Arial, sans-serif;
  line-height: 1.4;
  margin: 0;
  min-height: 100vh;
}

h1,
h2,
h3 {
  font-family: Alfa Slab One, serif;
  font-weight: 400;
}

main {
  display: block;
}

img {
  max-width: 100%;
}

.page-header {
  margin: 0;
  padding: 1rem;
}

.nav-links {
  display: flex;
  justify-content: space-between;
  margin-top: 0;
  margin-bottom: 1rem;
  padding: 0 1rem;
  list-style: none;
}

.nav-links > li + li {
  margin-left: 0.8em;
}

.nav-links > li > a {
  display: flex;
  padding: 0.8em 0;
  color: white;
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.06em;
}

.nav-links > li > a:hover {
  color: hsl(40, 100%, 70%);
}

.nav-links__icon {
  width: 1.25em;
  height: 1.25em;
  vertical-align: -0.2em;
  margin-right: 0.25em;
}

/* Выполнится только последнее правило transform */
.card {
  padding: 0.5em;
  margin: 0 auto;
  background-color: white;
  max-width: 300px;
  transform: rotate(15deg);
  transform: skew(-20deg);
  transform: scale(0.4);
  transform: translate(120px, 40px);
}

/* Возможно поменять точку начала трансформации
Устанавливается свойством transform-origin и может принимать значения: right, left, center, top, bottom
Может быть также указан в пикселях или иных единицах измерения */

/* Правила transform выполнятся по порядку, но сначала выполнится правило
transform, а потом - rotate */
.card-1 {
  padding: 0.5em;
  margin: 0 auto;
  background-color: white;
  max-width: 300px;
  transform: rotate(15deg) translate(20px, 0);
}

@media (min-width: 30em) {
  .page-header {
    padding: 2rem 2rem 3rem;
  }
}

@media (min-width: 30em) {
  .main-nav {
    position: fixed;
    top: 8.25rem;
    left: 0;
    z-index: 10;
    background-color: transparent;
    transition: background-color 0.5s linear;
    border-top-right-radius: 0.5em;
    border-bottom-right-radius: 0.5em;
  }

  .main-nav:hover {
    background-color: rgba(0, 0, 0, 0.6);
  }

  .nav-links {
    display: block;
    padding: 1em;
    margin-bottom: 0;
  }

  .nav-links > li + li {
    margin-left: 0;
  }

  .nav-links__label {
    display: inline-block;
    margin-left: 1em;
    padding-right: 1em;
    opacity: 0;
    transform: translate(-1em);
    transition: transform 0.4s cubic-bezier(0.2, 0.9, 0.3, 1.3),
      opacity 0.4s linear;
  }

  .nav-links:hover .nav-links__label,
  .nav-links a:focus > .nav-links__label {
    opacity: 1;
    transform: translate(0);
  }

  .nav-links > li:nth-child(2) .nav-links__label {
    transition: delay 0.1s;
  }
  .nav-links > li:nth-child(3) .nav-links__label {
    transition: delay 0.2s;
  }
  .nav-links > li:nth-child(4) .nav-links__label {
    transition: delay 0.3s;
  }
  .nav-links > li:nth-child(5) .nav-links__label {
    transition: delay 0.4s;
  }

  .nav-links__icon {
    transition: transform 0.2s ease-out;
  }

  .nav-links a:hover > .nav-links__icon,
  .nav-links a:focus > .nav-links__icon {
    transform: scale(1.3);
  }
}

.row {
  display: flex;
  justify-content: center;
}
.row-1 {
  perspective: 200px;
  perspective-origin: left bottom;
}
.box {
  box-sizing: border-box;
  width: 150px;
  margin: 0 20px;
  padding: 60px 0;
  text-align: center;
  background-color: hsl(150, 50%, 40%);
}

.box-0 {
  transform: perspective(200px) rotateX(30deg);
}

.box-1 {
  transform: rotateX(30deg);
}
